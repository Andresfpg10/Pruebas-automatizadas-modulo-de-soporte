# -*- coding: utf-8 -*-
"""Pruebas-automatizadas-modulo-de-soporte.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mGO9GB8pxLE8EavOEMkg-RA08eTlHmQm
"""

!pip install selenium

"""Inicio de sesiÃ³n (login)"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestIniciodesesinlogin():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_iniciodesesinlogin(self):
    self.driver.get("https://v2.psicoalianza.com/login")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("14251103")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("123456789$$")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()

"""Buscar un soporte desde la barra de busqueda"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestBuscarunsoportedesdelabarradebsqueda():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_buscarunsoportedesdelabarradebsqueda(self):
    self.driver.get("https://v2.psicoalianza.com/soportes")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2) > .text-white").click()
    self.driver.find_element(By.ID, "dt-search-0").click()
    self.driver.find_element(By.ID, "dt-search-0").send_keys("YHEY GUE")
    self.driver.find_element(By.ID, "dt-search-0").send_keys(Keys.ENTER)
    self.driver.find_element(By.CSS_SELECTOR, ".bi-search").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.LINK_TEXT, "Soporte").click()
    self.driver.find_element(By.ID, "dt-search-0").click()
    self.driver.find_element(By.ID, "dt-search-0").send_keys("Hahn Group")
    self.driver.find_element(By.ID, "dt-search-0").send_keys(Keys.ENTER)
    self.driver.find_element(By.ID, "dt-search-0").send_keys("Psico")
    self.driver.find_element(By.ID, "dt-search-0").send_keys(Keys.ENTER)
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) .form-check-input").click()
    self.driver.find_element(By.ID, "check-seleccionar-todos-soportes").click()
    self.driver.find_element(By.ID, "check-seleccionar-todos-soportes").click()

"""Funcionalidad del filtro (mostrar columnas)"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestFuncionalidaddelfiltromostrarcolumnas():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_funcionalidaddelfiltromostrarcolumnas(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.LINK_TEXT, "Soporte").click()
    self.driver.find_element(By.CSS_SELECTOR, ".show:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-0:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-0:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-0:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-0:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-lg-6:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody > tr:nth-child(1) > .columna-prioridad").click()
    self.driver.find_element(By.CSS_SELECTOR, ".columna-prioridad > .dt-column-title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".show:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-12 > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".columna-categoria > .dt-column-title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".show:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-12 > .btn").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".dt-orderable-asc:nth-child(7)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".show:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-12 > .btn").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".columna-prioridad > .dt-column-title").click()

"""Filtros avanzados"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestFiltrosavanzados():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_filtrosavanzados(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2) > .text-white").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td > .check-container").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.ID, "check-seleccionar-todos-soportes").click()
    self.driver.find_element(By.ID, "check-seleccionar-todos-soportes").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".select2-container--below .select2-selection__arrow").click()
    self.driver.find_element(By.ID, "select2-filtro_categoria_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    element = self.driver.find_element(By.LINK_TEXT, "Soporte")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_categoria_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_categoria_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check-container").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_categoria_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-filtro_origen_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .form-check-input")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_origen_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_origen_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_origen_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "td .form-check-input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_mensaje_id-container").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_mensaje_id-container").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_mensaje_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    self.driver.find_element(By.ID, "select2-filtro_tipo_mensaje_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_origen_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-12 > .btn")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_estado_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_estado_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_estado_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_estado_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_estado_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_estado_id-container").click()
    self.driver.find_element(By.ID, "select2-filtro_prioridad_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_prioridad_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_tipo_mensaje_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_prioridad_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.ID, "dt-search-0").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_prioridad_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-filter").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-filter")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "select2-filtro_prioridad_id-container").click()
    self.driver.find_element(By.ID, "boton-estoy-seguro").click()

"""Filtro numero de registros"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestFiltronmeroderegistros():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_filtronmeroderegistros(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2) > .text-white").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dt-paging-button:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dt-paging-button:nth-child(5)").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dt-paging-button:nth-child(3)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".dt-paging-button:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()
    self.driver.find_element(By.ID, "select2-tabla_length-container").click()

"""Exportar secciÃ³n"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestExportarseccin():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_exportarseccin(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2) > .text-white").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-auto:nth-child(2) > .btn").click()

"""Crear soporte empresa Psico (sencillo)"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCrearsoporteempresaPsicosencillo():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_crearsoporteempresaPsicosencillo(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.LINK_TEXT, "Soporte").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-lg-0 > .btn").click()
    self.driver.find_element(By.ID, "select2-empresa_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("psi")
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys(Keys.ENTER)
    self.driver.find_element(By.ID, "telefono_usuario").click()
    self.driver.find_element(By.ID, "telefono_usuario").send_keys("2222")
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-content").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #9</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ps-1 > .w-100").click()

"""Crear soporte para empresa Psico"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCrearsoporteempresaPsico():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_crearsoporteempresaPsico(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2) > .text-white").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-lg-0 > .btn").click()
    self.driver.find_element(By.ID, "select2-empresa_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("PSI")
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .col-12:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-circle")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .col-12:nth-child(2) > .bi").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-circle")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) .col-12:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(4) .col-12:nth-child(3)").click()
    self.driver.find_element(By.ID, "telefono_usuario").click()
    self.driver.find_element(By.ID, "telefono_usuario").send_keys("3123   AAA")
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-container")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-y36e-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-container")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-y36e-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-container")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-y36e-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-container")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-y36e-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jdk8-otro")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jdk8-otro")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jdk8-otro")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-container")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-y36e-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-rjx3-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-rjx3-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-rjx3-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jpv6-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jpv6-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jpv6-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-3ugi-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-3ugi-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-3ugi-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-j4i1-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-j4i1-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-j4i1-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-szcm-4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-szcm-4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-categoria_id-result-szcm-4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jpv6-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jpv6-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-tipo_prueba_id-result-jpv6-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-5omg-4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-5omg-4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-5omg-4")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-container")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-i14q-1")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-kunk-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-kunk-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-kunk-2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-qxal-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-qxal-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "select2-origen_id-result-qxal-3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck > p").click()
    self.driver.find_element(By.CSS_SELECTOR, "#modal-formulario .modal-body").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #7</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck-button:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-on:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(4) > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(4) > .ck-icon")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-on > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar_grouping > .ck > .ck:nth-child(5) > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #7</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar_grouping > .ck > .ck:nth-child(5) > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #7</p>'}", element)
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar_grouping > .ck > .ck:nth-child(6) > .ck-icon")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(7) > .col-6 .select2-selection")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, "#formulario").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar_grouping > .ck > .ck:nth-child(6) > .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-on").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(7) > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(7) > .ck-icon")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-on > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-file-dialog-button .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(2) > .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, "circle:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-reset > .ck > .ck > .ck:nth-child(5)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) > .ck > .ck-button__icon > path").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) > .ck > .ck-button__icon > path")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(57)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-icon__selected-indicator > path:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #7</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(4) > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-button-cancel > .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck-button:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, "blockquote > p").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) .ck > .ck:nth-child(6) > .ck:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) .ck > .ck:nth-child(5) > .ck:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-1 > .w-100").click()

"""Crear soporte empresa O'Hara Ltd (sencillo)"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCrearsoporteempresaOHaraLtdsencillo():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_crearsoporteempresaOHaraLtdsencillo(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.CSS_SELECTOR, ".bi-headset").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-lg-0 > .btn").click()
    self.driver.find_element(By.ID, "select2-empresa_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("O\'Hara Ltd")
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    self.driver.find_element(By.CSS_SELECTOR, "#modal-usuarios .modal-header .bi").click()
    self.driver.find_element(By.ID, "telefono_usuario").click()
    self.driver.find_element(By.ID, "telefono_usuario").send_keys("6666666")
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-content").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba#11</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ps-1 > .w-100").click()

"""Crear soporte empresa Hahn Group (sencillo)"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCrearsoporteempresaHahnGroupsencillo():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_crearsoporteempresaHahnGroupsencillo(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.LINK_TEXT, "Soporte").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-lg-0 > .btn").click()
    self.driver.find_element(By.ID, "select2-empresa_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("hah")
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .col-12:nth-child(2)").click()
    self.driver.find_element(By.ID, "telefono_usuario").click()
    self.driver.find_element(By.ID, "telefono_usuario").send_keys("5555")
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck > p").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba#11</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ps-1 > .w-100").click()
    self.driver.execute_script("window.scrollTo(0,0)")

"""Crear soporte empresa Hahn Group"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCrearsoporteempresaHahnGroup():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_crearsoporteempresaHahnGroup(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.LINK_TEXT, "Soporte").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-lg-0 > .btn").click()
    self.driver.find_element(By.ID, "select2-empresa_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("HAHN GROUP")
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys(Keys.ENTER)
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .col-12:nth-child(2) > .bi").click()
    self.driver.find_element(By.CSS_SELECTOR, ".fa").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-circle")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .col-12:nth-child(1)").click()
    self.driver.find_element(By.ID, "telefono_usuario").click()
    self.driver.find_element(By.ID, "telefono_usuario").send_keys("314636667AAA ...")
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-tipo_prueba_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-categoria_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.ID, "select2-origen_id-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-content").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #6</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(3) > .ck > path").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-content").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Prueba #6</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(3) > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(3) > .ck-icon")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-on > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(3) > .ck > path").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(3) > .ck > path")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(4) > .ck-icon").click()
    self.driver.find_element(By.ID, "ck-editor__aria-label_e5274fcb88a03a82200ba1a9ad4e8a2d2").click()
    self.driver.find_element(By.ID, "ck-editor__aria-label_e5c97587a3c1bbb9a75081fda0dde5846").click()
    self.driver.find_element(By.ID, "ck-editor__aria-label_e5274fcb88a03a82200ba1a9ad4e8a2d2").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-heading_heading2").click()
    self.driver.find_element(By.ID, "ck-editor__aria-label_e5274fcb88a03a82200ba1a9ad4e8a2d2").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-heading_heading3").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar_grouping > .ck > .ck:nth-child(6) > .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-on:nth-child(6) > .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(7) path").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(7) path")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(7) path").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar_grouping > .ck > .ck:nth-child(5) > .ck-icon").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><i><strong>Prueba #6</strong></i></p>'}", element)
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(10) path")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(7) > .col-6 .select2-selection")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, "#formulario").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(10) path").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(9)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck-button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) > .ck-off > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-insert-table-dropdown__grid").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-icon__selected-indicator > path:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ck-content")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><i><strong>Prueba #6</strong></i></p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__items > .ck:nth-child(2) > .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck-button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-reset > .ck > .ck > .ck:nth-child(5)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(4) > .ck > .ck-button__icon > path").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(4) > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) .ck:nth-child(6) path").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck:nth-child(3) .ck > .ck:nth-child(5) > .ck:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-toolbar__grouped-dropdown > .ck > .ck-button__icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ck-file-dialog-button .ck-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ps-1 > .w-100").click()

"""Cerrar sesiÃ³n"""

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCerrarsesin():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_cerrarsesin(self):
    self.driver.get("https://v2.psicoalianza.com/inicio")
    self.driver.set_window_size(1365, 718)
    self.driver.find_element(By.ID, "imagen-usuario").click()
    self.driver.find_element(By.LINK_TEXT, "Cerrar sesiÃ³n").click()